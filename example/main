# Converts to template class
class Animal():
    __init__(set_name, set_sound):
        print("Creating Animal")
        self.name  = set_name
        self.sound = set_sound

    # Converts to virtual function
    make_sound():
        print(name + " makes: " + sound)

# Converts to template class
class Dog(Animal):
    __init__(set_name):
        super().__init__(set_name, "bark") # Python style init calls
        print("Creating dog " + set_name)

# Converts to template class
class GoldenRetriever(Dog):
    __init__(set_name):
        super().__init__(set_name)
        print("Creating golden retriever " + set_name)

# Converts to int main()
main():
    print("Running Main")
    a = Animal("none", "no sound")
    a.make_sound()
    d = Dog("rover")
    d.make_sound()
    gr = GoldenRetriever("dylan")
    gr.make_sound()
    return 0
