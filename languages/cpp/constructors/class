$name = 0 0
$inheritance = 1    
$constructorargs = 2
$supercall = 3
$constructorbody = 4
$auxillaryargs = 5
$members = 5
$inners = 5
$body = 6
concat $auxillaryargs $inheritance
concat $inners $inheritance
name
defines
header

template <
sep , $auxillaryargs typename&T_@
>
class 
format $name __@__
if empty $inheritance
else
: 
sep , $inheritance public&T_@ 
endif
{
public:
sep ^ $members T_@&@;
format $name __@__
(
sep , $auxillaryargs T_@&set_@
)
if empty $inheritance
else
: 
sep , $inheritance T_@(set_@) 
endif
{
sep & $members @=set_@;
}

sep ;^ $body

};

template <
sep , $constructorargs typename&T_@
>
auto $name (
sep , $constructorargs T_@&@
){
sep ^  $constructorbody @; 
if empty $supercall
else
auto 
sep & $inheritance T_@&=@(
sep & $supercall
);
endif
return 
format $name __@__<
sep , $members decltype(@) source
if empty $supercall
else
,
sep & $inheritance decltype(T_@)
endif
>
(
sep , $members @ source
if empty $supercall
else
,
sep & $inheritance T_@
endif
);
}

source
// No source for template class definitions
